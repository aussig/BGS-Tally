/* Language name */
"!Language" = "Français";

/* [legend.py] */
"(Cannot be automatically distinguished)" = "(Ne peut pas être distingué automatiquement)";

/* Discord text. [fleetcarrier.py] */
"A carrier jump has been scheduled" = "Un saut en porte-vaisseau a été planifié";

/* Preferences checkbox label. [ui.py] */
"Abbreviate Faction Names" = "Abréger les noms des factions";

/* Label on API settings window. [api.py] */
"About This" = "À propos";

/* Preferences checkbox label. [ui.py] */
"Activity Indicator" = "Indicateur d'activité";

/* Label on activity window. [activity.py] */
"Activity to post:" = "Activité à publier:";

/* Add/create a new system. [colonisation.py] */
"Add" = "Ajouter";

/* CMDR information. [targetmanager.py] */
"Added a friend" = "Ajout d'un ami";

/* Preferences heading. [ui.py] */
"Advanced" = "Options avancées";

/* Colonisation 'Facility Economy' [base_types.json] */
"Agricultural" = "Agriculture";

/* Colonisation 'Building Type' [base_types.json] */
"Agricultural Installation" = "Installation agricole";

/* Colonisation 'Prerequisites' [base_types.json] */
"Agriculture Settlement" = "Colonie d'agriculture";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Agriculture Tier 1" = "Agriculture de Niveau 1";

/* Colonisation 'Type' [base_types.json] */
"Agriculture Tier 1 Med" = "Agriculture de Niveau 1 Moy";

/* Colonisation 'Type' [base_types.json] */
"Agriculture Tier 1 Sml" = "Agriculture de Niveau 1 Pt";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Agriculture Tier 2" = "Agriculture de Niveau 2";

/* Colonisation 'Type' [base_types.json] */
"Agriculture Tier 2 Lrg" = "Agriculture de Niveau 2 Lrg";

/* Discord carrier docking access. [fleetcarrier.py] */
"All" = "Tous";

/* all tracked builds. [progress.py] */
"All builds" = "Toutes les constructions";

/* Main window label. [ui.py] */
"API changed, open settings to re-approve" = "API modifiée, ouvrez les paramètres pour ré-approuver";

/* Label on API settings window. [api.py] */
"API Information" = "Informations API";

/* Label on API settings window. [api.py] */
"API Key" = "Clef API";

/* Label on API settings window. [api.py] */
"API Settings" = "Paramètres de l'API";

/* Label on API settings window. [api.py] */
"Approved by you" = "Approuvé par vous";

/* Preferences force tick text. [ui.py] */
"Are you sure that you want to do this?" = "Voulez-vous réellement faire cela ?";

/* [colonisation.py] */
"Are you sure you want to remove this system?" = "Voulez-vous vraiment supprimer ce système ?";

/* Text on API settings window. [api.py] */
"Ask the server administrator for the information below, then click 'Establish Connection' to continue. Buttons to pre-fill some information for popular servers are provided, but you will need to enter your API key which is unique to you." = "Demandez à l'administrateur du serveur les informations ci-dessous, puis cliquez sur 'Établir la connexion' pour continuer. Les boutons pour préremplir certaines informations pour les serveurs populaires sont fournis, mais vous devrez entrer votre clef API qui est unique pour vous.";

/* Colonisation 'Type' [base_types.json] */
"Asteroid Base" = "Base astéroïde";

/* Preferences checkbox label. [ui.py] */
"Automatically Post BGS and TW Activity" = "Publier automatiquement l'activité BGS et TW";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Bar" = "Bar";

/* name of the base. [colonisation.py] */
"Base Name" = "Nom de base";

/* type of base. [colonisation.py] */
"Base Type" = "Type de base";

/* Discord heading, abbreviation for black box. [default.py] */
"bb" = "bb";

/* Discord post title. [activity.py] */
"BGS Activity after Tick: {tick_time}" = "Activité BGS après le Tick : {tick_time}";

/* Dropdown menu on activity window. [activity.py] */
"BGS Only" = "BGS uniquement";

/* [clb.py] */
"BGS Report" = "Rapport BGS";

/* Discord heading. [default.py] */
"bio-pod" = "bio-pod";

/* Activity window tooltip. [activity.py] */
"Black market profit" = "Bénéfices du marché noir";

/* bodies in the system. [colonisation.py] */
"Bodies" = "Corps";

/* Body the base is on or around. [colonisation.py] */
"Body" = "Corps";

/* any boost effects for the base. [colonisation.py] */
"Boosted By" = "Boosté par";

/* Dropdown menu on activity window. [activity.py] */
"Both BGS and TW" = "BGS et TW";

/* Post to Discord button tooltip. [activity.py] */
"Both the 'Post to Discord as' field and a Discord webhook{CR}must be configured in the settings to allow posting to Discord" = "Le champ « Publier sur Discord en tant que » et un webhook Discord{CR}doivent être configurés dans les paramètres pour permettre la publication sur Discord";

/* Activity window tooltip. [activity.py] */
"Bounty vouchers" = "Prime de combat";

/* Building layout types. [colonisation.py] */
"Building Layouts" = "Modèles Constructions";

/* Building type. [colonisation.py] */
"Building Type" = "Type de bâtiment";

/* Builds/bases. [progress.py] */
"Builds" = "Constructions";

/* [fleetcarrier.py] */
"Buying Commodities" = "Achat de marchandises";

/* Discord fleet carrier section heading. [fleetcarrier.py] */
"Buying Commodities:" = "Achat de marchandises :";

/* [fleetcarrier.py] */
"Buying Materials" = "Achat de matériaux";

/* Discord fleet carrier section heading. [fleetcarrier.py] */
"Buying Materials:" = "Achat de matériaux :";

/* Cancel button. [colonisation.py] */
"Cancel" = "Annuler";

/* Discord heading. [default.py] */
"cargo" = "cargo";

/* [fleetcarrier.py] */
"Cargo" = "Cargaison";

/* Label on legend window. [legend.py] */
"Cargo missions" = "Mission de transport";

/* Discord fleet carrier section heading. [fleetcarrier.py] */
"Cargo:" = "Cargaison :";

/* Amount in your Fleet Carrier. [progress.py] */
"Carrier" = "Porte-Vaisseaux";

/* Discord fleet carrier title. [fleetcarrier.py] */
"Carrier {carrier_name}" = "Porte-Vaisseau {carrier_name}";

/* category of base. [colonisation.py] */
"Category" = "Catégorie";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Civilian" = "Civil";

/* Colonisation 'Type' [base_types.json] */
"Civilian Outpost" = "Avant-poste Civil";

/* Colonisation 'Type' [base_types.json] */
"Civilian Planetary Outpost" = "Avant-poste Planétaire Civile";

/* Colonisation 'Type' [base_types.json] */
"Civilian Settlement" = "Colonie Civile";

/* [sheet_options.py] */
"Clear contents" = "Effacer le contenu";

/* Label on CMDR window. [cmdrs.py] */
"CMDR Details" = "Détails du CMDR";

/* Discord heading. [cmdrs.py] */
"CMDR Inara Link" = "Lien Inara du CMDR";

/* Preferences checkbox label. [ui.py] */
"CMDR Info" = "Infos CMDR";

/* Preferences checkbox label. [ui.py] */
"Colonisation" = "Colonisation";

/* Colonisation 'Facility Economy' [base_types.json] */
"Colony" = "Colonie";

/* Activity window tooltip. [activity.py] */
"Combat bonds" = "Récompenses de combat";

/* Colonisation 'Type' [base_types.json] */
"Commercial Outpost" = "Avant-poste Commercial";

/* Commodity. [progress.py] */
"Commodity" = "Marchandise";

/* Colonisation 'Building Type' [base_types.json] */
"Comms Installation" = "Installation de communication";

/* Colonisation 'Prerequisites' [base_types.json] */
"Communication Installation" = "Installation de communication";

/* Colonisation 'Type' [base_types.json] */
"Communication Station" = "Station de communication";

/* Row heading of build totals i.e. ones that are done. [colonisation.py] */
"Complete" = "Complété";

/* Preferences button label. [ui.py] */
"Configure Remote Server" = "Configurer le serveur distant";

/* Preferences force tick popup title. [ui.py] */
"Confirm Force a New Tick" = "Confirmez forcer un nouveau Tick";

/* [colonisation.py] */
"Confirm Removal" = "Confirmer le retrait";

/* Colonisation 'Economy Influence' [base_types.json] */
"Contraband" = "Contrebande";

/* [widgets.py] */
"Copy" = "Copier";

/* [sheet_options.py] */
"Copy contents" = "Copier le contenu";

/* tooltip for the copy to clipboard icon. [colonisation.py] */
"Copy system name to clipboard" = "Copier le nom du système dans le presse-papier";

/* Button label. [activity.py] */
"Copy to Clipboard" = "Copier dans le presse-papier";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Coriolis" = "Coriolis";

/* Colonisation 'Type' [base_types.json] */
"Coriolis Starport" = "Spatioport Coriolis";

/* Cost in tonnes of cargo. [colonisation.py] */
"Cost" = "Coût";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Criminal Outpost" = "Avant-poste Criminel";

/* Discord heading, abbreviation for critically injured. [default.py] */
"crit" = "evac";

/* Label on legend window. [legend.py] */
"Critically wounded evacuation missions" = "Missions d'évacuation de blessés critiques";

/* tooltip for the build name. [progress.py] */
"Current build, click to copy to clipboard" = "Construction actuelle, cliquez pour copier dans le presse-papier";

/* [fleetcarrier.py] */
"Current System" = "Système actuel";

/* Preferences checkbox label. [ui.py] */
"Current Tick" = "Tick actuel";

/* [widgets.py] */
"Cut" = "Couper";

/* [sheet_options.py] */
"Cut contents" = "Couper les contenus";

/* tooltip for the commodity header. [progress.py] */
"Cycle commodity list details" = "Parcourir la liste des marchandises (détails)";

/* tooltip for the column headings in the progress view indicating that clicking on the headings will cycle through the available views. [progress.py] */
"Cycle commodity list filter views" = "Parcourir la liste des marchandises (filtre)";

/* CMDR window column title. [cmdrs.py] */
"Date / Time" = "Date / Heure";

/* Discord heading. [cmdrs.py] */
"Date and Time" = "Date et heure";

/* any decrease effects for the base. [colonisation.py] */
"Decreased By" = "Affaibli par";

/* [ui.py] */
"Default" = "Défaut";

/* Delete button. [colonisation.py] */
"Delete" = "Supprimer";

/* [sheet_options.py] */
"Delete columns" = "Supprimer des colonnes";

/* [sheet_options.py] */
"Delete rows" = "Supprimer les lignes";

/* Button on CMDR window. [cmdrs.py] */
"Delete Selected" = "Supprimer la sélection";

/* tooltip for the delete system button. [colonisation.py] */
"Delete system plan" = "Supprimer le plan du système";

/* Amount delivered. [progress.py] */
"Delivered" = "Livré";

/* [demo.py] */
"Demo Data Only" = "Données de démo uniquement";

/* Discord heading. [fleetcarrier.py] */
"Departure Time" = "Heure de départ";

/* Label on API settings window. [api.py] */
"Description" = "Description";

/* Label on legend window. [legend.py] */
"Detailed INF split into + / ++ / +++ / ++++ / +++++ received from missions." = "Détaille des INF séparé en + / ++ / +++ / ++++ / +++++ reçu des missions.";

/* Development level impact. [colonisation.py] */
"Dev Lvl" = "Niv Dev";

/* Label on activity window. [activity.py] */
"Discord Additional Notes" = "Notes supplémentaires de Discord";

/* Preferences label. [ui.py] */
"Discord Avatar URL" = "URL de l'Avatar Discord";

/* [ui.py] */
"Discord Options" = "Options Discord";

/* Label on activity window. [activity.py] */
"Discord Report Preview ⓘ" = "Aperçu du rapport Discord ⓘ";

/* Preferences heading. [ui.py] */
"Discord Webhooks" = "Discord Webhooks";

/* Discord heading. [fleetcarrier.py] */
"Docking" = "Amarrage";

/* Label on activity window. [activity.py] */
"Double-check on-ground CZ tallies, sizes are not always correct" = "Double vérification du comptage des CZ au sol, les tailles ne sont pas toujours correctes";

/* Economy influence. [colonisation.py] */
"Econ Inf" = "Influence";

/* [colonisation.py] */
"Economy" = "Économie";

/* [sheet_options.py] */
"Edit cell" = "Éditer la cellule";

/* [sheet_options.py] */
"Edit header" = "Éditer l'en-tête";

/* [sheet_options.py] */
"Edit index" = "Éditer l'index";

/* [clb.py] */
"Election Inf" = "Inf Élection";

/* Discord heading, abbreviation for election INF. [default.py] */
"ElectionINF" = "INF élection";

/* Label on activity window. [activity.py] */
"Empty System, no BGS Activity Available" = "Système vide, aucune activité BGS disponible";

/* Activity window tooltip. [activity.py] */
"Enable / disable all factions" = "Activer / désactiver toutes les factions";

/* Activity window tooltip. [activity.py] */
"Enable / disable faction" = "Activer / désactiver la faction";

/* Checkbox on API settings window. [api.py] */
"Enable {activities_url} Requests" = "Activer les requêtes {activities_url}";

/* Checkbox on API settings window. [api.py] */
"Enable {events_url} Requests" = "Activer les requêtes {events_url}";

/* Error when no plan name is given. [colonisation.py] */
"Error" = "Erreur";

/* Discord heading, abbreviation for escape pod. [default.py] */
"esc-pod" = "esc-pod";

/* Label on API settings window. [api.py] */
"Establish a connection" = "Établissement de la connexion";

/* Button on API settings window. [api.py] */
"Establish Connection" = "Établir la connexion";

/* Label on API settings window. [api.py] */
"Events Requested" = "Événements demandés";

/* Discord heading, abbreviation for exobiology. [default.py] */
"Exo" = "Exo";

/* Discord heading, abbreviation for exploration. [default.py] */
"Expl" = "Explo";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Exploration" = "Exploration";

/* Activity window tooltip. [activity.py] */
"Exploration data" = "Données d'exploration";

/* Colonisation 'Type' [base_types.json] */
"Exploration Hub" = "Hub d'Exploration";

/* Colonisation 'Facility Economy' [base_types.json] */
"Extraction" = "Extraction";

/* Colonisation 'Type' [base_types.json] */
"Extraction Hub" = "Hub d’Extraction";

/* Colonisation 'Prerequisites' [base_types.json] */
"Extraction Settlement" = "Colonie d'Extraction";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Extraction Tier 1" = "Extraction de Niveau 1";

/* Colonisation 'Type' [base_types.json] */
"Extraction Tier 1 Med" = "Extraction de Niveau 1 Moy";

/* Colonisation 'Type' [base_types.json] */
"Extraction Tier 1 Sml" = "Extraction de Niveau 1 Pt";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Extraction Tier 2" = "Extraction de Niveau 2";

/* Colonisation 'Type' [base_types.json] */
"Extraction Tier 2 Lrg" = "Extraction de Niveau 2 Lrg";

/* Activity window column title. [activity.py] */
"Faction" = "Faction";

/* Discord heading, abbreviation for failed missions. [default.py] */
"Fails" = "Échecs";

/* Preferences table heading, abbreviation for fleet carrier commodities / materials. [ui.py] */
"FC C/M" = "FC M/M";

/* Preferences table heading, abbreviation for fleet carrier operations. [ui.py] */
"FC Ops" = "FC Opés";

/* Preferences button label. [ui.py] */
"Force Tick" = "Forcer le Tick";

/* Appended to tick time if a forced tick. [activity.py] */
"forced" = "forcé";

/* Preferences label. [ui.py] */
"Format for Discord Posts" = "Format pour les messages Discord";

/* Discord CMDR information. [targetmanager.py] */
"Friend request received from this CMDR" = "Demande d'ami reçue de ce CMDR";

/* Discord carrier docking access. [fleetcarrier.py] */
"Friends" = "Amis";

/* Discord heading. [fleetcarrier.py] */
"From System" = "Depuis le système";

/* Overlay galaxy tick message. [ui.py] */
"Galaxy Tick: {tick_time}" = "Tick de Galaxie : {tick_time}";

/* Appended to tick time if a normal tick. [activity.py] */
"game" = "jeu";

/* [colonisation.py] */
"Gas giant" = "Géante gazeuse";

/* Preferences heading. [ui.py] */
"General Options" = "Options générales";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Government" = "Gouvernement";

/* Colonisation 'Type' [base_types.json] */
"Government Installation" = "Installation gouvernementale";

/* [clb.py] */
"Ground" = "Sol";

/* Activity window tooltip. [activity.py] */
"Ground conflict zones" = "Zones de conflit terrestre";

/* Discord heading, abbreviation for ground conflict zones. [default.py] */
"GroundCZs" = "Conflit au sol";

/* Discord heading. [default.py] */
"GroundMurders" = "Meurtres au sol";

/* Activity window tooltip. [activity.py] */
"High" = "Élevé";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"High Tech" = "Haute Technologie";

/* Colonisation 'Type' [base_types.json] */
"Hightech Hub" = "Hub de Haute Technologie";

/* Colonisation 'Type' [base_types.json] */
"Hightech Planetary Outpost" = "Avant-poste planétaire de Haute Technologie";

/* HMC World is a high metal content world. [colonisation.py] */
"HMC world" = "Monde HMC";

/* Colonisation 'Category' [base_types.json] */
"Hub" = "Hub";

/* Button on API settings window. [api.py] */
"I Approve" = "J'approuve";

/* Button on API settings window. [api.py] */
"I Do Not Approve" = "Je n'approuve pas";

/* Discord CMDR information. [targetmanager.py] */
"I scanned this CMDR" = "J'ai scanné ce CMDR";

/* Heading on legend window. [legend.py] */
"Icons in BGS Reports" = "Icônes dans les rapports de BGS";

/* Heading on legend window. [legend.py] */
"Icons in Thargoid War Reports" = "Icônes dans le rapport de guerre Thargoïde";

/* Discord heading. [cmdrs.py] */
"In Ship" = "Dans le vaisseau";

/* Overlay CMDR information report message. [ui.py] */
"In ship: {ship}" = "Vaisseau utilisé : {ship}";

/* Discord heading. [cmdrs.py] */
"In Squadron" = "Dans l'escadron";

/* Discord heading. [cmdrs.py] */
"In System" = "Dans le système";

/* Overlay CMDR information report message. [ui.py] */
"In system: {system}" = "Dans le système : {system}";

/* Preferences heading. [ui.py] */
"In-game Overlay" = "Overlay en jeu";

/* Preferences label. [ui.py] */
"In-game overlay support requires the separate EDMCOverlay plugin to be installed - see the instructions for more information." = "La prise en charge de l'overlay en jeu nécessite l'installation du plugin EDMCOverlay - voir les instructions pour plus d'informations.";

/* Activity window tooltip. [activity.py] */
"In-space Conflict Zone Side Objective: Cap ship" = "Objectif de zone de conflit dans l'espace : Cap de vaisseau";

/* Activity window tooltip. [activity.py] */
"In-space Conflict Zone Side Objective: Enemy captain" = "Objectif de zone de conflit dans l'espace : Capitaine ennemi";

/* Activity window tooltip. [activity.py] */
"In-space Conflict Zone Side Objective: Propaganda wing" = "Objectif de zone de conflit dans l'espace : Correspondant de conflit";

/* Activity window tooltip. [activity.py] */
"In-space Conflict Zone Side Objective: Spec ops wing" = "Objectif de zone de conflit dans l'espace : Forces spéciales";

/* Inara URL on CMDR window. [cmdrs.py] */
"Inara Info Available ⤴" = "Info Inara Disponible ⤴";

/* Overlay CMDR information report message. [ui.py] */
"INARA INFORMATION AVAILABLE" = "INFORMATIONS INARA DISPONIBLES";

/* Inara link. [activity.py] */
"Inara ⤴" = "Inara ⤴";

/* Label on CMDR window. [cmdrs.py] */
"Inara: " = "Inara : ";

/* Checkbox label. [activity.py] */
"Include" = "Inclus";

/* Preferences checkbox label. [ui.py] */
"Include Secondary INF" = "Inclure les INF secondaires";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Industrial" = "Industriel";

/* Colonisation 'Type' [base_types.json] */
"Industrial Hub" = "Hub Industriel";

/* Colonisation 'Building Type' [base_types.json] */
"Industrial Installation" = "Installation Industrielle";

/* Colonisation 'Type' [base_types.json] */
"Industrial Outpost" = "Avant-poste Industriel";

/* Colonisation 'Type' [base_types.json] */
"Industrial Planetary Outpost" = "Avant-poste Planétaire Industriel";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Industrial Tier 1" = "Industriel de Niveau 1";

/* Colonisation 'Type' [base_types.json] */
"Industrial Tier 1 Med" = "Industriel de Niveau 1 Moy";

/* Colonisation 'Type' [base_types.json] */
"Industrial Tier 1 Sml" = "Industriel de Niveau 1 Pt";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Industrial Tier 2" = "Industriel de Niveau 2";

/* Colonisation 'Type' [base_types.json] */
"Industrial Tier 2 Lrg" = "Industriel de Niveau 2 Lrg";

/* [clb.py] */
"Inf" = "Inf";

/* Discord heading, abbreviation for INF. [default.py] */
"INF" = "INF";

/* Activity window tooltip. [activity.py] */
"Influence" = "Influence";

/* Discord heading. [default.py] */
"injured" = "blessé";

/* Label on legend window. [legend.py] */
"Injured evacuation missions" = "Mission d'évacuation de blessés";

/* [sheet_options.py] */
"Insert column" = "Insérer une colonne";

/* [sheet_options.py] */
"Insert columns left" = "Insérer une colonne à gauche";

/* [sheet_options.py] */
"Insert columns right" = "Insérer une colonne à droite";

/* [sheet_options.py] */
"Insert row" = "Insérer une ligne";

/* [sheet_options.py] */
"Insert rows above" = "Insérer des lignes au-dessus";

/* [sheet_options.py] */
"Insert rows below" = "Insérer des lignes ci-dessous";

/* Colonisation 'Category' [base_types.json] */
"Installation" = "Installation";

/* Preferences label. [ui.py] */
"Instructions for Use" = "Mode d'emploi";

/* Preferences heading. [ui.py] */
"Integrations" = "Intégrations";

/* CMDR window column title. [cmdrs.py] */
"Interaction" = "Interaction";

/* Label on CMDR window. [cmdrs.py] */
"Interaction: " = "Interaction : ";

/* CMDR information. [targetmanager.py] */
"Interdicted by" = "Interdit par";

/* Discord CMDR information. [targetmanager.py] */
"INTERDICTED BY this CMDR" = "INTERDICÉ PAR ce CMDR";

/* Discord post title. [fleetcarrier.py] */
"Jump Cancelled for Carrier {carrier_name}" = "Saut annulé pour le transporteur {carrier_name}";

/* Discord post title. [fleetcarrier.py] */
"Jump Scheduled for Carrier {carrier_name}" = "Saut programmé pour le transporteur {carrier_name}";

/* CMDR information. [targetmanager.py] */
"Killed by" = "Tué par";

/* Discord CMDR information. [targetmanager.py] */
"KILLED BY this CMDR" = "TUÉ PAR ce CMDR";

/* Discord heading. [default.py] */
"kills" = "victimes";

/* [legend.py] */
"Kills" = "Victimes";

/* [progress.py] */
"L" = "L";

/* [colonisation.py] */
"Landable" = "Atterrissable";

/* Preferences label. [ui.py] */
"Language for Discord Posts" = "Langage pour les publications Discord";

/* Colonisation 'Building Type' [base_types.json] */
"Large" = "Large";

/* Main window label. [ui.py] */
"Last BGS Tick:" = "Dernier Tick BGS :";

/* Button label. [ui.py] */
"Latest BGS Tally" = "Dernier bilan du BGS";

/* tooltip for the inara market commodity links and copy to clipboard. [progress.py] */
"Left click for Inara market, right click to copy" = "Clic gauche pour le marché Inara, clic droit pour copier";

/* CMDR window column title. [cmdrs.py] */
"Legal" = "Légal";

/* Discord heading. [cmdrs.py] */
"Legal Status" = "Statut légal";

/* Overlay CMDR information report message. [ui.py] */
"Legal status: {legal}" = "Statut légal : {legal}";

/* Number of loads of cargo. [colonisation.py] */
"Loads" = "Charges";

/* base location surface/orbital. [colonisation.py] */
"Location" = "Lieu";

/* [fleetcarrier.py] */
"Locker" = "Casier";

/* Discord fleet carrier section heading. [fleetcarrier.py] */
"Locker:" = "Casier :";

/* Activity window tooltip. [activity.py] */
"Low" = "Faible";

/* [legend.py] */
"Massacre missions" = "Missions de massacre";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Medical" = "Médical";

/* Colonisation 'Type' [base_types.json] */
"Medical Installation" = "Installation Médicale";

/* Activity window tooltip. [activity.py] */
"Medium" = "Moyenne";

/* Discord CMDR information. [targetmanager.py] */
"Message received from this CMDR in local chat" = "Message reçu du CMDR dans le chat local";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Military" = "Militaire";

/* Colonisation 'Type' [base_types.json] */
"Military Hub" = "Hub Militaire";

/* Colonisation 'Type' [base_types.json] */
"Military Installation" = "Installation Militaire";

/* Colonisation 'Type' [base_types.json] */
"Military Outpost" = "Avant-poste Militaire";

/* Colonisation 'Prerequisites' [base_types.json] */
"Military Settlement" = "Colonie Militaire";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Military Tier 1" = "Militaire de Niveau 1";

/* Colonisation 'Type' [base_types.json] */
"Military Tier 1 Med" = "Militaire de Niveau 1 Moy";

/* Colonisation 'Type' [base_types.json] */
"Military Tier 1 Sml" = "Militaire de Niveau 1 Pt";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Military Tier 2" = "Militaire de Niveau 2";

/* Colonisation 'Type' [base_types.json] */
"Military Tier 2 Lrg" = "Militaire de Niveau 2 Lrg";

/* Colonisation 'Type' [base_types.json] */
"Mining Outpost" = "Avant-poste Minier";

/* Colonisation 'Prerequisites' [base_types.json] */
"Mining Outpost Installation" = "Avant-poste Minier (Installation)";

/* Activity window tooltip. [activity.py] */
"Mission fails" = "Mission échouée";

/* Discord heading. [default.py] */
"missions" = "missions";

/* Discord heading, abbreviation for massacre (missions). [default.py] */
"mm" = "mm";

/* Discord heading. [default.py] */
"Murders" = "Meurtres";

/* Label on API settings window. [api.py] */
"Name" = "Nom";

/* Label on CMDR window. [cmdrs.py] */
"Name: " = "Nom : ";

/* Amount still needed. [progress.py] */
"Needed" = "Nécessaire";

/* Overlay message. [bgstally.py] */
"NEW TICK DETECTED!" = "NOUVEAU TICK DÉTECTÉ !";

/* Preferences table heading. [ui.py] */
"Nickname" = "Surnom";

/* [fleetcarrier.py] */
"No" = "Non";

/* No colonisation data available. [progress.py] */
"No colonisation data available" = "Aucunes données de colonisation disponibles";

/* Discord carrier docking access. [fleetcarrier.py] */
"None" = "Aucun";

/* Discord heading. [fleetcarrier.py] */
"Notorious Access" = "Accès Anonyme";

/* Objectives title. [objectivesmanager.py] */
"Objectives" = "Objectifs";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Ocellus" = "Ocellus";

/* Colonisation 'Type' [base_types.json] */
"Ocellus Starport" = "Spatioport Ocellus";

/* Label on legend window. [legend.py] */
"On-ground Conflict Zone" = "Zone de conflit au sol";

/* Indicates the field is optional and case-sensitive. [colonisation.py] */
"optional and case sensitive" = "facultatif et sensible à la casse";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Orbis" = "Orbis";

/* Colonisation 'Type' [base_types.json] */
"Orbis Starport" = "Spatioport Orbis";

/* Number of orbital/space builds. [colonisation.py] */
"Orbital" = "Orbitale";

/* Colonisation 'Category' [base_types.json] */
"Outpost" = "Avant-Poste";

/* Colonisation 'Type' [base_types.json] */
"Outpost Hub" = "Hub d'Avant-Poste";

/* Landing pad size. [colonisation.py] */
"Pad" = "Pad";

/* [ui.py] */
"Panels" = "Panneaux";

/* Discord heading, abbreviation for passengers. [default.py] */
"passeng" = "passager";

/* Label on legend window. [legend.py] */
"Passenger missions" = "Missions de passagers";

/* [ui.py] */
"Past Estimated Tick Time" = "Estimation de l'heure du passage du Tick";

/* [widgets.py] */
"Paste" = "Coller";

/* Percentage. [progress.py] */
"Percent" = "Pourcentage";

/* Checkbox label. [activity.py] */
"Pin {system_name} to Overlay" = "Épingler {system_name} à l'overlay";

/* Colonisation 'Type' [base_types.json] */
"Pirate Base" = "Base de Pirates";

/* Colonisation 'Building Type' [base_types.json] */
"Pirate Installation" = "Installation Pirate";

/* Colonisation 'Type' [base_types.json] */
"Pirate Outpost" = "Avant-Poste Pirate";

/* the name you want to give your plan. [colonisation.py] */
"Plan Name" = "Nom du plan";

/* Colonisation 'Category' [base_types.json] */
"Planetary Outpost" = "Avant-Poste Planétaire";

/* Colonisation 'Type' [base_types.json] */
"Planetary Port" = "Port Planétaire";

/* Row heading of planned build totals i.e. ones that aren't complete. [colonisation.py] */
"Planned" = "Planifié";

/* URL label on API settings window. [api.py] */
"Player Journal Documentation" = "Documentation du journal du joueur";

/* Text on API settings window. [api.py] */
"PLEASE ENSURE YOU TRUST the server you send this information to!" = "VEUILLEZ VOUS ASSURER QUE VOUS AVEZ CONFIANCE au serveur auquel vous envoyez ces informations !";

/* [colonisation.py] */
"Pop" = "Pop";

/* Population increase. [colonisation.py] */
"Pop Inc" = "Pop Aug";

/* Population Maximum. [colonisation.py] */
"Pop Max" = "Pop Max";

/* [colonisation.py] */
"Population" = "Population";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Port" = "Port";

/* Button on CMDR window. [cmdrs.py] */
"Post CMDR List to Discord" = "Publier la liste des CMDR sur Discord";

/* Button on CMDR window. [cmdrs.py] */
"Post CMDR to Discord" = "Publier le CMDR sur Discord";

/* Button label. [activity.py] */
"Post to Discord" = "Publier sur Discord";

/* Preferences label. [ui.py] */
"Post to Discord as" = "Publier sur Discord en tant que";

/* Discord message footer, legacy text mode. [discord.py] */
"Posted at: {date_time} | {plugin_name} v{version}" = "Publié à: {date_time} | {plugin_name} v{version}";

/* Label for checkbox to pre-populate bases from EDSM. [colonisation.py] */
"Pre-fill bases from EDSM" = "Préremplir les bases depuis EDSM";

/* Notice about prepopulation being challenging. [colonisation.py] */
"Pre-filling requires a system name, can have mixed results, and will likely require manual base type selection. Use with caution!" = "Le pré-remplissage nécessite un nom de système, peut avoir des résultats mitigés et nécessitera probablement une sélection manuelle de type de base. À utiliser avec précaution!";

/* Button label. [ui.py] */
"Previous BGS Tallies" = "BGS Tallies précédents";

/* Activity window column title, abbreviation for primary. [activity.py] */
"Pri" = "Primaire";

/* Activity window tooltip. [activity.py] */
"Primary" = "Primaire";

/* Label on legend window. [legend.py] */
"Primary INF. This is INF gained for the mission issuing faction." = "INF primaire, c'est l'INF gagné pour la faction de la mission émettrice.";

/* Activity window column title, abbreviation for profit. [activity.py] */
"Prof" = "Benef";

/* Activity window tooltip for profit at zero | low | medium | high demand. [activity.py] */
"Profit at Z | L | M | H demand" = "Profit pour une demande N | F | M | H";

/* [progress.py] */
"Progress" = "Progression";

/* Activity window column title, abbreviation for purchase. [activity.py] */
"Purch" = "Achat";

/* Activity window tooltip for purchase at low | medium | high supply. [activity.py] */
"Purchase at L | M | H supply" = "Achat à offre F | M | H";

/* Discord heading, abbreviation for reactivation (TW missions). [default.py] */
"reac" = "reac";

/* Label on legend window. [legend.py] */
"Reactivation missions" = "Missions de réactivation";

/* CMDR information. [targetmanager.py] */
"Received friend request from" = "Demande d'ami reçue de";

/* CMDR information. [targetmanager.py] */
"Received message from" = "Message reçu de";

/* CMDR information. [targetmanager.py] */
"Received team invite from" = "Invitation d'équipe reçue de";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Refinery" = "Raffinerie";

/* Colonisation 'Type' [base_types.json] */
"Refinery Hub" = "Hub de Raffinerie";

/* Colonisation 'Building Type' [base_types.json] */
"Relay Installation" = "Installation de Relais";

/* Colonisation 'Type' [base_types.json] */
"Relay Station" = "Station Relais";

/* Colonisation 'Prerequisites' [base_types.json] */
"Relay Station Installation" = "Station Relais (Installation)";

/* Rename button. [colonisation.py] */
"Rename" = "Renommer";

/* Rename a system. [colonisation.py] */
"Rename System" = "Renommer le Système";

/* tooltip for the rename system button. [colonisation.py] */
"Rename system plan" = "Renommer le plan du système";

/* Preferences checkbox label. [ui.py] */
"Report Newly Visited System Activity By Default" = "Signaler l'activité du système récemment visité Par Défaut";

/* Required amount. [progress.py] */
"Required" = "Requis";

/* any prerequisites for the base. [colonisation.py] */
"Requirements" = "Prérequis";

/* Colonisation 'Prerequisites' [base_types.json] */
"Research Bio Settlement" = "Colonie de Recherche Biologique";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Research Bio Tier 1" = "Recherche Biologique de Niveau 1";

/* Colonisation 'Type' [base_types.json] */
"Research Bio Tier 1 Med" = "Recherche Biologique de Niveau 1 Moy";

/* Colonisation 'Type' [base_types.json] */
"Research Bio Tier 1 Sml" = "Recherche Biologique de Niveau 1 Pt";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Research Bio Tier 2" = "Recherche Biologique de Niveau 2";

/* Colonisation 'Type' [base_types.json] */
"Research Bio Tier 2 Lrg" = "Recherche Biologique de Niveau 2 Lrg";

/* Colonisation 'Type' [base_types.json] */
"Research Station" = "Station de Recherche";

/* [colonisation.py] */
"rings" = "anneaux";

/* Discord heading, abbreviation for search and rescue. [default.py] */
"SandR" = "SandR";

/* Colonisation 'Type' [base_types.json] */
"Satellite" = "Satellite";

/* Colonisation 'Building Type' [base_types.json] */
"Satellite Installation" = "Installation Satellite";

/* CMDR information. [targetmanager.py] */
"Scanned" = "Scanné";

/* Activity window tooltip. [activity.py] */
"Scenario wins" = "Scénario gagnant";

/* Discord heading. [default.py] */
"Scenarios" = "Scénarios";

/* Activity window column title, abbreviation for scenarios. [activity.py] */
"Scens" = "Scénarios";

/* Colonisation 'Building Type' [base_types.json] */
"Scientific" = "Scientifique";

/* Colonisation 'Type' [base_types.json] */
"Scientific Hub" = "Hub Scientifique";

/* Colonisation 'Building Type' [base_types.json] */
"Scientific Installation" = "Installation Scientifique";

/* Colonisation 'Type' [base_types.json] */
"Scientific Outpost" = "Avant-Poste Scientifique";

/* Label on legend window. [legend.py] */
"Search & Rescue Bio Pods" = "Recherche et Sauvetage des Bio Pods";

/* Label on legend window. [legend.py] */
"Search & Rescue Black Boxes" = "Recherche et Sauvetage des Boîtes Noires";

/* Label on legend window. [legend.py] */
"Search & Rescue Escape Pods" = "Recherche et Sauvetage des Nacelles d’évacuation";

/* Label on legend window. [legend.py] */
"Search & Rescue Tissue Samples" = "Recherche et Sauvetage d'échantillons de tissue";

/* Activity window tooltip. [activity.py] */
"Search and rescue" = "Recherche et sauvetage";

/* Activity window column title, abbreviation for secondary. [activity.py] */
"Sec" = "Secondary";

/* Activity window tooltip. [activity.py] */
"Secondary" = "Secondaire";

/* Label on legend window. [legend.py] */
"Secondary INF. This is INF gained as a secondary effect of the mission, for example the destination faction for delivery missions." = "INF secondaire, c'est l'INF obtenu comme un effet secondaire de la mission, par exemple la faction de destination pour les missions de livraison.";

/* Security impact. [colonisation.py] */
"Security" = "Sécurité";

/* Colonisation 'Building Type' [base_types.json] */
"Security Installation" = "Installation de Sécurité";

/* Colonisation 'Type' [base_types.json] */
"Security Station" = "Station de Sécurité";

/* [widgets.py] */
"Select all" = "Tout sélectionner";

/* [fleetcarrier.py] */
"Selling Commodities" = "Vendre des marchandises";

/* Discord fleet carrier section heading. [fleetcarrier.py] */
"Selling Commodities:" = "Vendre des marchandises :";

/* [fleetcarrier.py] */
"Selling Materials" = "Vendre des matériaux";

/* Discord fleet carrier section heading. [fleetcarrier.py] */
"Selling Materials:" = "Vendre des matériaux :";

/* Label on API settings window. [api.py] */
"Server URL" = "URL du serveur";

/* Colonisation 'Category' [base_types.json] */
"Settlement" = "Colonie";

/* Discord heading. [default.py] */
"settlements" = "bases planétaires";

/* Activity window column title. [activity.py] */
"Ship" = "Vaisseau";

/* Label on API settings window. [api.py] */
"Shortcuts for Popular Servers" = "Raccourcis pour les serveurs populaires";

/* tooltip for the show bases button. [colonisation.py] */
"Show base types window" = "Afficher la fenêtre des types de base";

/* Main window tooltip. [ui.py] */
"Show CMDR information window" = "Afficher la fenêtre d'information du CMDR";

/* Main window tooltip. [ui.py] */
"Show colonisation window" = "Afficher la fenêtre de colonisation";

/* Preferences checkbox label. [ui.py] */
"Show Detailed INF" = "Afficher le détaille des INF";

/* Preferences checkbox label. [ui.py] */
"Show Detailed Trade" = "Afficher le détaille du commerce";

/* Main window tooltip. [ui.py] */
"Show fleet carrier window" = "Afficher la fenêtre du transporteur de flotte";

/* Preferences checkbox label. [ui.py] */
"Show In-game Overlay" = "Afficher la superposition en jeu";

/* Activity window tooltip. [activity.py] */
"Show legend window" = "Afficher la fenêtre de légende";

/* tooltip for the next build icon. [progress.py] */
"Show next build" = "Afficher la prochaine construction";

/* Main window tooltip. [ui.py] */
"Show objectives / missions window" = "Afficher la fenêtre des objectifs / missions";

/* tooltip for the previous build icon. [progress.py] */
"Show previous build" = "Afficher la construction précédente";

/* tooltip for the show bodies window. [colonisation.py] */
"Show system bodies window" = "Afficher la fenêtre des corps du système";

/* tooltip for the show notes window. [colonisation.py] */
"Show system notes window" = "Afficher la fenêtre des notes du système";

/* Preferences checkbox label. [ui.py] */
"Show Systems with Zero Activity" = "Afficher les systèmes avec une activité zéro";

/* Colonisation 'Building Type' [base_types.json] */
"Small" = "Petit";

/* Standard of living impact. [colonisation.py] */
"SoL" = "Niv Vie";

/* Label on carrier window. [fleetcarrier.py] */
"Some information cannot be updated. Enable Fleet Carrier CAPI Queries in File -> Settings -> Configuration" = "Certaines informations ne peuvent pas être mises à jour. Activez les requêtes CAPI de Porte-Vaisseaux dans Fichier -> Paramètres -> Configuration";

/* [clb.py] */
"Space" = "Espace";

/* Colonisation 'Type' [base_types.json] */
"Space Bar" = "Bar Spatial";

/* Activity window tooltip. [activity.py] */
"Space conflict zones" = "Zones de conflit spatial";

/* Colonisation 'Type' [base_types.json] */
"Space Farm" = "Ferme Spatiale";

/* Colonisation 'Prerequisites' [base_types.json] */
"Space Farm Installation" = "Ferme Spatiale (Installation)";

/* Discord heading, abbreviation for space conflict zones. [default.py] */
"SpaceCZs" = "CZsVaisseau";

/* Discord carrier docking access. [fleetcarrier.py] */
"Squadron and Friends" = "Escadron et amis";

/* CMDR window column title. [cmdrs.py] */
"Squadron ID" = "ID de l'escadron";

/* Overlay CMDR information report message. [ui.py] */
"Squadron ID: {squadron}" = "ID de l'escadron: {squadron}";

/* Discord heading. [cmdrs.py] */
"Squadron Inara Link" = "Lien Inara de l'escadron";

/* Label on CMDR window. [cmdrs.py] */
"Squadron: " = "Escadron : ";

/* Colonisation 'Category' [base_types.json] */
"Starport" = "Spatioport";

/* Activity window column title. [activity.py] */
"State" = "État";

/* Number of ground/surface builds. [colonisation.py] */
"Surface" = "Surface";

/* CMDR window column title. [cmdrs.py] */
"System" = "Système";

/* Discord heading. [default.py] */
"System activity" = "Activité du système";

/* Preferences checkbox label. [ui.py] */
"System Information" = "Informations du système";

/* Label for the system's name field in the UI. [colonisation.py] */
"System Name" = "Nom du Système";

/* Overlay system tick message. [ui.py] */
"System Tick: {tick_time}" = "Ticket Système : {tick_time}";

/* Label on carrier window. [fleetcarrier.py] */
"System: {current_system} - Docking: {docking_access} - Notorious Allowed: {notorious}" = "Système: {current_system} - Appontage : {docking_access} - Notoriété autorisée : {notorious}";

/* [progress.py] */
"t" = "t";

/* Tier 2 points. [colonisation.py] */
"T2" = "Т2";

/* Tier 3 points. [colonisation.py] */
"T3" = "Т3";

/* Text on API settings window. [api.py] */
"Take care when agreeing to this - if you approve this server, {plugin_name} will send your information to it, which will include CMDR details such as your location, missions and kills." = "Faites attention lorsque vous acceptez cela - si vous approuvez ce serveur, {plugin_name} lui enverra vos informations, qui inclura des détails CMDR tels que votre emplacement, vos missions et vos tués.";

/* Overlay message. [activity.py] */
"Targeted Ally!" = "Allié ciblé !";

/* Discord CMDR information. [targetmanager.py] */
"Team invite received from this CMDR" = "Invitation d'équipe reçue de ce CMDR";

/* Technology level. [colonisation.py] */
"Tech Lvl" = "Niv Tech";

/* [colonisation.py] */
"Terraformable" = "Terraformable";

/* Name of default output formatter. [text.py] */
"Text Only" = "Texte Seulement";

/* Preferences checkbox label. [ui.py] */
"Thargoid War Progress" = "Progrès de la guerre thargoïde";

/* Label on activity window. [activity.py] */
"Thargoid War System, no BGS Activity is Counted" = "Système en guerre de Thargoïde, aucune activité BGS n'est comptabilisée";

/* Text on API settings window. [api.py] */
"The exact set of Events that will be sent is listed in the 'Events Requested' section below. Further information about these Events and what they contain is provided here: " = "L'ensemble exact des événements qui seront envoyés est listé dans la section « Événements demandés » ci-dessous. Des informations supplémentaires sur ces événements et ce qu'ils contiennent sont fournies ici : ";

/* Discord text. [fleetcarrier.py] */
"The scheduled carrier jump was cancelled" = "Le saut de transporteur programmé a été annulé";

/* Discord CMDR information. [targetmanager.py] */
"This CMDR was added as a friend" = "Ce CMDR a été ajouté en tant qu'ami";

/* Text on API settings window. [api.py] */
"This screen is used to set up a connection to a server." = "Cet écran est utilisé pour configurer une connexion au serveur.";

/* Preferences force tick popup text. [ui.py] */
"This will move your current activity into the previous tick, and clear activity for the current tick." = "Cela déplacera votre activité actuelle vers le tick précédent, et effacera l'activité pour le tick actuel.";

/* [ui.py] */
"Tick {minutes_delta}m Overdue (Estimated)" = "Tick en retard de {minutes_delta}m (Estimated)";

/* tier of base. [colonisation.py] */
"Tier" = "Niv";

/* [ui.py] */
"To add a webhook: Right-click on a row number and select 'Insert rows above / below'." = "Pour ajouter un webhook : Faites un clic droit sur un numéro de ligne et sélectionnez 'Insérer des lignes au-dessus / en-dessous'.";

/* Discord heading. [fleetcarrier.py] */
"To Body" = "Au Corps";

/* Amount still left to buy. [progress.py] */
"To Buy" = "Acheter";

/* [ui.py] */
"To delete a webhook: Right-click on a row number and select 'Delete rows'." = "Pour supprimer un webhook : Faites un clic droit sur un numéro de ligne et sélectionnez 'Supprimer les lignes'.";

/* Discord heading. [fleetcarrier.py] */
"To System" = "Au système";

/* Total number of builds. [colonisation.py] */
"Total" = "Total";

/* Colonisation 'Economy Influence' [base_types.json] */
"Tourism" = "Tourisme";

/* Colonisation 'Prerequisites' [base_types.json] */
"Tourism Settlement" = "Colonie de Tourisme";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Tourism Tier 1" = "Tourisme Niveau 1";

/* Colonisation 'Type' [base_types.json] */
"Tourism Tier 1 Med" = "Tourisme Niveau 1 Moy";

/* Colonisation 'Type' [base_types.json] */
"Tourism Tier 1 Sml" = "Tourisme Niveau 1 Pt";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Tourism Tier 2" = "Tourisme Niveau 2";

/* Colonisation 'Type' [base_types.json] */
"Tourism Tier 2 Lrg" = "Tourisme Niveau 2 Lrg";

/* Colonisation 'Type (Listed as/under)' [base_types.json] */
"Tourist" = "Touristique";

/* Colonisation 'Type' [base_types.json] */
"Tourist Installation" = "Installation Touristique";

/* Track this build?. [colonisation.py] */
"Track" = "Suivre";

/* Activity window column title. [activity.py] */
"Trade" = "Commerce";

/* Discord heading, abbreviation for trade black market profit. [default.py] */
"TrdBMProfit" = "BenefMN";

/* Discord heading, abbreviation for trade buy. [default.py] */
"TrdBuy" = "Achat";

/* Discord heading, abbreviation for trade profit. [default.py] */
"TrdProfit" = "Bénéf";

/* Discord heading, abbreviation for tissue sample. [default.py] */
"ts" = "et";

/* Discord post title. [activity.py] */
"TW Activity after Tick: {tick_time}" = "Activité TW après le Tick : {tick_time}";

/* Dropdown menu on activity window. [activity.py] */
"TW Only" = "TW uniquement";

/* [ui.py] */
"TW War Progress in {current_system}: {percent}%" = "Progression de la guerre Thargoid dans {current_system} : {percent}%";

/* body type details. [colonisation.py] */
"Type" = "Type";

/* type of base as listed in the game. [colonisation.py] */
"Type (Listed as)" = "Type (Listé comme)";

/* [sheet_options.py] */
"Undo" = "Annuler";

/* Overlay CMDR information report message. [ui.py] */
"Unknown" = "Inconnu";

/* Main window label. [ui.py] */
"Update will be installed on shutdown" = "La mise à jour sera installée lors de la fermeture";

/* Discord footer message, modern embed mode. [discord.py] */
"Updated at {date_time} (game)" = "Mis à jour à {date_time} (jeu)";

/* Discord message footer, legacy text mode. [discord.py] */
"Updated at: {date_time} | {plugin_name} v{version}" = "Mis à jour à : {date_time} | {plugin_name} v{version}";

/* [clb.py] */
"War Inf" = "Inf Guerre";

/* Discord heading, abbreviation for war INF. [default.py] */
"WarINF" = "InfGuerre";

/* Preferences force tick popup text. [ui.py] */
"WARNING: It is not usually necessary to force a tick. Only do this if you know FOR CERTAIN there has been a tick but {plugin_name} is not showing it." = "AVERTISSEMENT : Il n'est généralement pas nécessaire de forcer un Tick. Ne le faites que si vous savez AVEC CERTITUDE qu'il y a eu un tick mais que {plugin_name} ne l'affiche pas.";

/* Preferences checkbox label. [ui.py] */
"Warnings" = "Avertissement";

/* Wealth impact. [colonisation.py] */
"Wealth" = "Capital";

/* Preferences table heading. [ui.py] */
"Webhook URL" = "Webhook URL";

/* Label on API settings window. [api.py] */
"Website ⤴" = "Website ⤴";

/* Notice about the first base being special. [colonisation.py] */
"When planning your system the first base is special, make sure that it is the first on the list." = "Lors de la planification de votre système, la première base est spéciale, assurez-vous qu'elle est la première sur la liste.";

/* [ui.py] */
"Within {minutes_to_tick}m of Next Tick (Estimated)" = "Dans les {minutes_to_tick}m du prochain Tick (estimé)";

/* Discord heading. [default.py] */
"wounded" = "blessé";

/* Label on legend window. [legend.py] */
"Wounded evacuation missions" = "Mission d'évacuation de blessés";

/* [fleetcarrier.py] */
"Yes" = "Oui";

/* Label on legend window. [legend.py] */
"Zero / Low / Med / High demand level for trade buy / sell" = "Zéro / Faible / Moyen / Niveau de demande élevé pour l'achat / la vente";

/* Activity window title. [activity.py] */
"{plugin_name} - Activity After Tick at: {tick_time}" = "{plugin_name} - Activité après le tick à : {tick_time}";

/* API settings window title. [api.py] */
"{plugin_name} - API Settings" = "{plugin_name} - Paramètres de l'API";

/* Carrier window title. [fleetcarrier.py] */
"{plugin_name} - Carrier {carrier_name} ({carrier_callsign}) in system: {system_name}" = "{plugin_name} - Transporteur {carrier_name} ({carrier_callsign}) dans le système : {system_name}";

/* CMDR window title. [cmdrs.py] */
"{plugin_name} - CMDR Interactions" = "{plugin_name} - Interactions CMDR";

/* window title. [colonisation.py] */
"{plugin_name} - Colonisation" = "{plugin_name} - Colonisation";

/* Title of the base type popup window. [colonisation.py] */
"{plugin_name} - Colonisation Base Types" = "{plugin_name} - Types de Base de Colonisation";

/* Title of the bodies popup window. [colonisation.py] */
"{plugin_name} - Colonisation Bodies" = "{plugin_name} - Corps de la Colonisation";

/* Title of the legend popup window. [colonisation.py] */
"{plugin_name} - Colonisation Legend" = "{plugin_name} - Légende de la Colonisation";

/* Title of the notes popup window. [colonisation.py] */
"{plugin_name} - Colonisation Notes for {system_name}" = "{plugin_name} - Notes de colonisation pour {system_name}";

/* Legend window title. [legend.py] */
"{plugin_name} - Icon Legend" = "{plugin_name} - Légende de l'icône";

/* Objectives window title. [objectives.py] */
"{plugin_name} - Objectives" = "{plugin_name} - Objectifs";

/* Preferences checkbox label. [ui.py] */
"{plugin_name} Active" = "{plugin_name} Actif";

/* Overlay message. [overlay.py] */
"{plugin_name} Ready" = "{plugin_name} Prêt";

/* Main window label. [ui.py] */
"{plugin_name} Status:" = "{plugin_name} Statut :";

/* Main window error message. [tick.py] */
"{plugin_name} WARNING: Unable to fetch latest tick" = "{plugin_name} Attention : Impossible de récupérer le dernier tick";

/* [tick.py] */
"{plugin_name} WARNING: Unable to fetch system tick" = "{plugin_name} AVERTISSEMENT : Impossible de récupérer le tick du système";

/* Objectives title. [objectivesmanager.py] */
"{server_name} Objectives" = "{server_name} Objectifs";

/* [colonisation.py] */
"ⓘ" = "ⓘ";

/* [colonisation.py] */
"📓" = "📓";
